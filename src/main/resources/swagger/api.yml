openapi: 3.0.0
info:
  version: "1.0"
  title: LoyaltySwagger
  description: The TMForum Loyalty API Specification as developed by Globetom
paths:
  /loyaltyProgramProductSpec:
    get:
      description: This operation is used to retrieve the loyalty program product
        specifications. A loyalty program product specification contains loyalty
        rules.
      tags:
        - Loyalty Program Product Spec
      operationId: List Product Specs
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgramProductSpec"
      security: []
      x-unitTests:
        - request:
            method: GET
            uri: /loyaltyProgramProductSpec
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List Product Specs
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty program product
        specification.
      tags:
        - Loyalty Program Product Spec
      operationId: Create Product Spec
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProgramProductSpec"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgramProductSpec"
        "409":
          description: Conflict - Resource already exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyProgramProductSpec
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"id\" : \"121\",\r

              \    \"name\":\"UpComingProfessionalsProgram\",\r

              \    \"productNumber\":\"121\",\r

              \    \"description\": \"Loyalty Program to ensure
              that prepaid youth market is retained\",\r

              \    \"needsLoyaltyAccount\": true,\r

              \    \"lifeCycleStatus\": \"active\",\r

              \    \"brand\" : \"Globetom\",\r

              \    \"validFor\" : {\r

              \        \"startDateTime\" :
              \"2016-01-01T00:00:00Z\",\r

              \        \"endDateTime\" :
              \"2016-12-31T23:59:59Z\"\r

              \    }\r

              }"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Product Spec
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}":
    get:
      description: This operation is used to retrieve a single loyalty program product
        specification. A loyalty program product specification contains loyalty
        rules.
      tags:
        - Loyalty Program Product Spec
      operationId: Get Product Spec
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramProductSpec"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a program product spec.
      tags:
        - Loyalty Program Product Spec
      operationId: Delete Product Spec
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Updates a loyalty program product spec.
      tags:
        - Loyalty Program Product Spec
      operationId: Update Product Spec
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductSpec"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramProductSpec"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /loyaltyAction:
    get:
      description: This operation is used to retrieve all the loyalty actions. A loyalty
        action contains a loyalty execution point.
      tags:
        - Loyalty Action
      operationId: List Actions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyAction"
      security: []
      x-unitTests:
        - request:
            method: GET
            uri: /loyaltyAction
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List Actions
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty action.
      tags:
        - Loyalty Action
      operationId: Create Action
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyAction"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAction"
        "409":
          description: Conflict - Resource already exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyAction
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"id\": \"111\",\r

              \    \"type\": \"LoyaltyEarn\",\r

              \    \"actionAttributes\": {\r

              \        \"quantity\": 50\r

              \    },\r

              \    \"loyaltyExecutionPoint\": {\r

              \        \"commonName\": \"LoyaltyEarn\",\r

              \        \"description\": \"\",\r

              \        \"action\": \"POST\",\r

              \        \"endpoint\":
              \"http://server:port/loyaltyManagement/loyaltyProgramMember/{memb\
              erId}/loyaltyBalance/{balanceId}/loyaltyEarn\",\r

              \        \"version\": \"2.0\"\r

              \    }\r

              }\r\n"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Action
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAction/{actionId}":
    get:
      description: This operation is used to retrieve a loyalty action.
      tags:
        - Loyalty Action
      operationId: Get Action
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAction"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation is used to delete a loyalty action.
      tags:
        - Loyalty Action
      operationId: Delete Action
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update the complete loyalty action.
      tags:
        - Loyalty Action
      operationId: Update Action
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAction"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation partially updates a loyalty action.
      tags:
        - Loyalty Action
      operationId: Patch Action
      parameters:
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAction"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /loyaltyCondition:
    get:
      description: This operation is used to retrieve all the loyalty conditions.
      tags:
        - Loyalty Condition
      operationId: List Conditions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyCondition"
      security: []
      x-unitTests:
        - request:
            method: GET
            uri: /loyaltyCondition
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List Conditions
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty condition.
      tags:
        - Loyalty Condition
      operationId: Create Condition
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyCondition"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCondition"
        "409":
          description: Conflict - Resource already exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyCondition
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"id\" : \"1\",\r

              \    \"attribute\":\"age\",\r

              \    \"operator\":\"<=\",\r

              \    \"value\": \"23\"\r

              }\r\n"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Condition
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyCondition/{conditionId}":
    get:
      description: •  This operation is used to retrieve a loyalty condition.
      tags:
        - Loyalty Condition
      operationId: Get Condition
      parameters:
        - name: conditionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCondition"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update the complete loyalty condition.
      tags:
        - Loyalty Condition
      operationId: Update Condition
      parameters:
        - name: conditionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyCondition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCondition"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation is used to delete a loyalty condition.
      tags:
        - Loyalty Condition
      operationId: Delete Condition
      parameters:
        - name: conditionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation partially updates a loyalty condition.
      tags:
        - Loyalty Condition
      operationId: Patch Condition
      parameters:
        - name: conditionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyCondition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCondition"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /loyaltyEventType:
    get:
      description: This operation is used to retrieve the loyalty event types.
      tags:
        - Loyalty Event Type
      operationId: List Event Types
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyEventType"
      security: []
      x-unitTests:
        - request:
            method: GET
            uri: /loyaltyEventType
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: List Event Types
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty event type.
      tags:
        - Loyalty Event Type
      operationId: Create Event Types
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyEventType"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyEventType"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyEventType
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"id\": \"111\",\r

              \    \"eventType\": \"orderCreationNotification\"\r

              }"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Event Types
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyEventType/{eventTypeId}":
    get:
      description: This operation is used to retrieve a loyalty event type.
      tags:
        - Loyalty Event Type
      operationId: Get Event Type
      parameters:
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyEventType"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ""
      tags:
        - Loyalty Event Type
      operationId: Update Event Types
      parameters:
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LoyaltyEventType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyEventType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation is used to delete a loyalty event type.
      tags:
        - Loyalty Event Type
      operationId: Delete Event Types
      parameters:
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: ""
      tags:
        - Loyalty Event Type
      operationId: Update Event Types1
      parameters:
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventTypesrequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyEventType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule":
    get:
      description: This operation is used to retrieve the loyalty program product
        specification’s loyalty rule(s).
      tags:
        - Loyalty Rule
      operationId: List Rules
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyRule"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Create Rule
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateLoyaltyRule"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyRule"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}":
    get:
      description: This operation is used to retrieve a loyalty program product
        specification loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Get Rule
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyRule"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update the complete loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Update Rule
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateLoyaltyRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyRule"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation is used to delete a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Delete Rule
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation partially updates a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Patch Rule
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateLoyaltyRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyRule"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyCondition":
    get:
      description: This operation is used to retrieve the loyalty rule’s loyalty conditions.
      tags:
        - Loyalty Rule
      operationId: List Rule Conditions
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyCondition"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ""
      tags:
        - Loyalty Rule
      operationId: Add Rule Condition
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRuleCondition"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCondition"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyCondition/{conditionId}":
    delete:
      description: This operation is used to remove a loyalty condition from a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Delete Rule Condition
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
        - name: conditionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyAction":
    get:
      description: his operation is used to retrieve the loyalty rule’s loyalty actions.
      tags:
        - Loyalty Rule
      operationId: Get Rule Actions
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyAction"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to add a loyalty action to a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Add Rule Action
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRuleAction"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAction"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyAction/{actionId}":
    delete:
      description: This operation is used to remove a loyalty action from a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Delete Rule Action
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyEventType":
    get:
      description: "This operation is used to retrieve the loyalty rule’s supported loyalty
        events. "
      tags:
        - Loyalty Rule
      operationId: Get Rule Event Types
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyEventType"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to add a loyalty event type to a loyalty rule.
      tags:
        - Loyalty Rule
      operationId: Add Rule Event Type
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRuleEventType"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyEventType"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramProductSpec/{productSpecId}/loyaltyRule/{ruleId}/loyaltyEventType/{eventTypeId}":
    delete:
      description: This operation is used to remove a loyalty event type from a loyalty
        rule.
      tags:
        - Loyalty Rule
      operationId: Delete Rule Event Type
      parameters:
        - name: productSpecId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
        - name: eventTypeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /loyaltyProgramMember:
    get:
      description: This operation retrieves loyalty program members. The loyalty program
        member contains accounts and balances in logical containers.
      tags:
        - Loyalty Member
      operationId: Get Members
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyMember"
      security: []
      x-unitTests:
        - request:
            method: GET
            uri: /loyaltyProgramMember
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get Members
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation creates a new loyalty program member.
      tags:
        - Loyalty Member
      operationId: Create Member
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoyaltyMember"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyMember"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyProgramMember
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"status\":\"suspended\",\r

              \    \"name\":\"James Joe\",\r

              \    \"validFor\": {\r

              \        \"startDateTime\":\"2015-04-19T16:42:23.0Z
              \",\r

              \        \"endDateTime\":\"2016-04-19T16:42:23.0Z\"\
              \r

              \    }\r

              }"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create Member
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramMember/{memberId}":
    get:
      description: This operation retrieves a loyalty program member by ID. The loyalty
        program member contains accounts and balances in logical containers.
      tags:
        - Loyalty Member
      operationId: Get Member
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyMember"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation updates the attributes of a loyalty program member
        present in the request body.
      tags:
        - Loyalty Member
      operationId: Update Member
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLoyaltyMember"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyMember"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation deletes a loyalty program member.
      tags:
        - Loyalty Member
      operationId: Delete Member
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance":
    get:
      description: This operation retrieves loyalty program member accounts. The account
        resource is also returned within each balance entity.
      tags:
        - Loyalty Account Balance
      operationId: List Member Balances
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyBalance"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation creates a new loyalty program member account balance.
      tags:
        - Loyalty Account Balance
      operationId: Create Member Balance
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLoyaltyBalance"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyBalance"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance/{balanceId}":
    get:
      description: This operation retrieves a loyalty program member account. The account
        resource is also returned within each balance entity.
      tags:
        - Loyalty Account Balance
      operationId: Get Member Balance
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyBalance"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation deletes a loyalty program member account.
      tags:
        - Loyalty Account Balance
      operationId: Update Member Balance
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation updates the attributes of a loyalty program member
        loyalty balance present in the request body.
      tags:
        - Loyalty Account Balance
      operationId: Delete Member Balance
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoyaltyBalanceUpdate"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyBalance"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramMember/{memberId}/loyaltyAccount":
    get:
      description: This operation retrieves loyalty program member accounts.
      tags:
        - Loyalty Member Account
      operationId: List Member Accounts
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyAccount"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramMember/{memberId}/loyaltyProgramProduct":
    get:
      description: This operation is used to retrieve the loyalty program member’s loyalty
        program products.
      tags:
        - Loyalty Program Product
      operationId: List Products
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductProgramRef"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation is used to create a new loyalty program product.
      tags:
        - Loyalty Program Product
      operationId: Create Product
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductProgramRef"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductProgramRef"
        "409":
          description: Conflict - Resource already exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramMember/{memberId}/loyaltyProgramProduct/{programProductId}":
    get:
      description: This operation is used to retrieve the loyalty program member’s loyalty
        program product.
      tags:
        - Loyalty Program Product
      operationId: Get Product
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: programProductId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductProgramRef"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: This operation is used to delete a loyalty program product.
      tags:
        - Loyalty Program Product
      operationId: Delete Product
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: programProductId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: This operation partially updates a loyalty program member’s loyalty
        program product.
      tags:
        - Loyalty Program Product
      operationId: Update Product
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: programProductId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductProgramUpdateRef"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductProgramRef"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyProgramMember/{memberId}/loyaltyProgramProduct/{programProductId}/loyaltyExecutionPoint":
    get:
      description: This operation is used to retrieve all the loyalty execution points on a
        loyalty product. These execution points are records of loyalty actions
        executed.
      tags:
        - Loyalty Execution Point
      operationId: Get Execution Points
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: programProductId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyExecutionPoint"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance/{balanceId}/loyaltyEarn/{transactionId}":
    get:
      description: This operation retrieves a loyalty account loyalty earn transaction on a
        spesific account balance.
      tags:
        - Loyalty Earn
      operationId: Get Earn Transaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyTransactionRef"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance/{balanceId}/loyaltyEarn":
    get:
      description: This operation retrieves a loyalty account loyalty earn transactions on
        a spesific account balance.
      tags:
        - Loyalty Earn
      operationId: List Earn Transactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyTransactionRef"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation creates a new loyalty earn transaction.
      tags:
        - Loyalty Earn
      operationId: Earn Loyalty Balance
      parameters:
        - name: profileId
          in: header
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoyaltyEarnDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyTransactionRef"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance/{balanceId}/loyaltyBurn/{transactionId}":
    get:
      description: This operation retrieves a single loyalty account loyalty burn
        transaction on a spesific account balance.
      tags:
        - Loyalty Burn
      operationId: Get Burn Transaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyTransactionRef"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  "/loyaltyAccount/{accountId}/loyaltyBalance/{balanceId}/loyaltyBurn":
    get:
      description: This operation retrieves a loyalty account loyalty burn transactions on
        a spesific account balance.
      tags:
        - Loyalty Burn
      operationId: List Burn Transactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoyaltyTransactionRef"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: This operation creates a new loyalty burn transaction.
      tags:
        - Loyalty Burn
      operationId: Burn Loyalty Balance
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: balanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyTransactionRef"
        "409":
          description: Conflict - A loyalty transaction with the same identifier already
            exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /loyaltyEvent:
    post:
      description: This operation specifies a loyalty event that has occurred.
      tags:
        - Loyalty Event
      operationId: Notify Loyalty Event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoyaltyEvent"
        required: true
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity - Field rule violation or missing required
            attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
      x-unitTests:
        - request:
            method: POST
            uri: /loyaltyEvent
            headers:
              Content-Type: application/json
            body: "{\r

              \    \"eventId\":\"00001\",\r

              \    \"eventTime\":\"2013-04-19T16:42:25-04:00\",\r

              \    \"eventType\":\"orderCreationNotification\",\r

              \    \"event\":{\r

              \        \"productOrder\":{\r

              \            \"id\":\"42\",\r

              \             \"href\":\"http://serverlocation:port\
              /orderManagement/productOrder/42\",\r

              \             \"externalId\":\"NiceNameForTheConsum\
              er_42\"\r

              \        }\r

              \    }\r

              }\r\n"
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Notify Loyalty Event
          x-testDescription: ""
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
servers:
  - url: http://serverRoot/tmf-api/loyaltyManagement/v1
components:
  requestBodies:
    LoyaltyEarnDTO:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoyaltyEarnDTO"
    LoyaltyEventType:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoyaltyEventType"
      required: true
    LoyaltyCondition:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoyaltyCondition"
      required: true
    LoyaltyAction:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoyaltyAction"
      required: true
    CreateLoyaltyRule:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateLoyaltyRule"
      required: true
  schemas:
    LoyaltyEarnDTO:
      title: Loyalty Earn DTO object
      type: object
      properties:
        id:
          type: string
        quantity:
          type: integer
          format: int32
        description:
          type: string
      required:
        - id
        - quantity
        - description
    ProgramProductSpec:
      title: ProgramProductSpec
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        productNumber:
          type: string
        description:
          type: string
        needsLoyaltyAccount:
          type: boolean
        lifeCycleStatus:
          type: string
        brand:
          type: string
        validFor:
          $ref: "#/components/schemas/ValidFor"
      required:
        - id
        - name
        - productNumber
        - description
        - needsLoyaltyAccount
        - lifeCycleStatus
        - brand
        - validFor
    UpdateProductSpec:
      title: UpdateProductSpec
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        productNumber:
          type: string
        brand:
          type: string
      required:
        - name
        - description
        - productNumber
        - brand
    LoyaltyAction:
      title: LoyaltyAction
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        actionAttributes:
          type: object
        body:
          type: object
        headers:
          type: object
        commonName:
          type: string
        description:
          type: string
        action:
          type: string
        endpoint:
          type: string
      required:
        - type
        - action
        - endpoint
    LoyaltyActionLinkRef:
      title: LoyaltyActionLinkRef
      type: object
      properties:
        id:
          type: string
        href:
          type: string
    LoyaltyCondition:
      title: LoyaltyCondition
      type: object
      properties:
        id:
          type: string
        attribute:
          type: string
        operator:
          type: string
        value:
          type: string
      required:
        - attribute
        - operator
        - value
    LoyaltyConditionLinkRef:
      title: LoyaltyConditionLinkRef
      type: object
      properties:
        id:
          type: string
        href:
          type: string
    LoyaltyEventType:
      title: LoyaltyEventType
      type: object
      properties:
        id:
          type: string
        eventType:
          type: string
      required:
        - eventType
    LoyaltyEventTypeLinkRef:
      title: LoyaltyEventTypeLinkRef
      type: object
      properties:
        id:
          type: string
        href:
          type: string
    LoyaltyRule:
      title: LoyaltyRule
      type: object
      properties:
        id:
          type: string
        commonName:
          type: string
        description:
          type: string
        isCNF:
          type: boolean
        hasSubRules:
          type: boolean
        isMandatoryEvaluation:
          type: boolean
        usage:
          type: string
        keywords:
          type: string
        policyName:
          type: string
        loyaltyEventType:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyEventTypeLinkRef"
        loyaltyCondition:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyConditionLinkRef"
        loyaltyAction:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyActionLinkRef"
    CreateLoyaltyRule:
      title: LoyaltyRule
      type: object
      properties:
        id:
          type: string
        commonName:
          type: string
        description:
          type: string
        isCNF:
          type: boolean
        hasSubRules:
          type: boolean
        isMandatoryEvaluation:
          type: boolean
        usage:
          type: string
        keywords:
          type: string
        policyName:
          type: string
    AddRuleCondition:
      title: RuleCondition
      type: object
      properties:
        id:
          type: string
      required:
        - id
    AddRuleAction:
      title: RuleAction
      type: object
      properties:
        id:
          type: string
      required:
        - id
    AddRuleEventType:
      title: RuleEventType
      type: object
      properties:
        id:
          type: string
      required:
        - id
    LoyaltyExecutionPoint:
      title: LoyaltyExecutionPoint
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        actionAttributes:
          type: object
        body:
          type: object
        headers:
          type: object
        commonName:
          type: string
        description:
          type: string
        action:
          type: string
        endpoint:
          type: string
        dateTime:
          type: string
    ValidFor:
      title: ValidFor
      type: object
      properties:
        startDateTime:
          type: string
        endDateTime:
          type: string
      required:
        - startDateTime
        - endDateTime
    LoyaltyMember:
      title: CreateLoyaltyMember
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        name:
          type: string
        validFor:
          $ref: "#/components/schemas/ValidFor"
    UpdateEventTypesrequest:
      title: Update Event TypesRequest
      type: object
      properties:
        eventType:
          type: string
      required:
        - eventType
    CreateLoyaltyBalance:
      title: CreateLoyaltyBalance
      type: object
      properties:
        id:
          type: string
        quantity:
          $ref: "#/components/schemas/Quantity"
        validFor:
          $ref: "#/components/schemas/ValidFor"
      required:
        - quantity
    LoyaltyBalance:
      title: LoyaltyBalance
      type: object
      properties:
        id:
          type: string
        quantity:
          $ref: "#/components/schemas/Quantity"
        validFor:
          $ref: "#/components/schemas/ValidFor"
        loyaltyProgramMember:
          $ref: "#/components/schemas/LoyaltyMemberLinkRef"
    LoyaltyBalanceUpdate:
      title: LoyaltyBalanceUpdate
      type: object
      properties:
        validFor:
          $ref: "#/components/schemas/ValidFor"
    LoyaltyAccount:
      title: LoyaltyAccount
      type: object
      properties:
        id:
          type: string
        href:
          type: string
        loyaltyProgramProduct:
          $ref: "#/components/schemas/ProductLinkRef"
    LoyaltyAccountCreate:
      title: LoyaltyAccountCreate
      type: object
      properties:
        id:
          type: string
        loyaltyBalance:
          $ref: "#/components/schemas/CreateLoyaltyBalance"
    UpdateLoyaltyMember:
      title: UpdateLoyaltyMember
      type: object
      properties:
        status:
          type: string
        name:
          type: string
        validFor:
          $ref: "#/components/schemas/ValidFor"
    LoyaltyMemberLinkRef:
      title: LoyaltyMemberLinkRef
      type: object
      properties:
        id:
          type: string
        href:
          type: string
    ProductProgramUpdateRef:
      title: ProductProgramUpdate
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        productStatus:
          type: string
        validFor:
          $ref: "#/components/schemas/ValidFor"
    ProductProgramRef:
      title: ProductProgram
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        productStatus:
          type: string
        validFor:
          $ref: "#/components/schemas/ValidFor"
        productSpecId:
          type: string
        accountId:
          type: string
        loyaltyAccount:
          $ref: "#/components/schemas/LoyaltyAccountCreate"
        characteristics:
          type: array
          items:
            $ref: "#/components/schemas/ProductCharacteristics"
      required:
        - name
        - productSpecId
    ProductCharacteristics:
      title: ProductLinkRef
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    ProductLinkRef:
      title: ProductLinkRef
      type: object
      properties:
        id:
          type: string
        href:
          type: string
    LoyaltyTransactionRef:
      title: LoyaltyTransaction
      type: object
      properties:
        id:
          type: string
        href:
          type: string
        quantity:
          type: integer
          format: int32
        openingBalance:
          type: number
          format: double
        closingBalance:
          type: number
          format: double
        dateTime:
          type: string
          format: dateTime
        description:
          type: string
      required:
        - id
        - href
        - quantity
        - description
        - openingBalance
        - closingBalance
        - dateTime
    LoyaltyEvent:
      title: LoyaltyEvent
      type: object
      properties:
        eventId:
          type: string
        eventTime:
          type: string
        eventType:
          type: string
        memberId:
          type: string
        event:
          $ref: "#/components/schemas/Event"
      required:
        - memberId
        - eventType
        - event
    Quantity:
      title: Quantity
      type: object
      properties:
        unit:
          type: string
        balance:
          type: number
          format: double
      required:
        - unit
        - balance
    Event:
      title: Event
      type: object
    Error:
      required:
        - code
        - message
      properties:
        code:
          description: An integer coding the error type. This is given to caller so he can
            translate them if required.
          type: integer
        message:
          description: A short localized string that describes the error.
          type: string
        description:
          description: (optional) A long localized error description if needed. It can
            contain precise information about which parameter is missing, or
            what are the identifier acceptable values.
          type: string
        infoURL:
          description: (optional) A URL to online documentation that provides more
            information about the error.
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/ErrorDetail"
    ErrorDetail:
      required:
        - code
        - message
      properties:
        code:
          description: An integer coding the error type. This is given to caller so he can
            translate them if required.
          type: integer
        message:
          description: A short localized string that describes the error.
          type: string
        description:
          description: (optional) A long localized error description if needed. It can
            contain precise information about which parameter is missing, or
            what are the identifier acceptable values.
          type: string
        infoURL:
          description: (optional) A URL to online documentation that provides more
            information about the error.
          type: string
